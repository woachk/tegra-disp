/*
 * WARNING: This is an autogenerated file. DO NOT EDIT.
 * This file is generated using below files:
 * template file: kernel/inc/vgpu/gt_sdk-structures.h
 * definition file: kernel/inc/vgpu/sdk-structures.def
 */


#ifdef SDK_STRUCTURES
// These are copy of sdk structures, that will be used for the communication between the vmioplugin & guest RM.
typedef struct NVOS00_PARAMETERS_v03_00
{
    NvHandle   hRoot;
    NvHandle   hObjectParent;
    NvHandle   hObjectOld;
    NvV32      status;
} NVOS00_PARAMETERS_v03_00;

typedef NVOS00_PARAMETERS_v03_00 NVOS00_PARAMETERS_v;

typedef struct NVOS55_PARAMETERS_v03_00
{
    NvHandle   hClient;
    NvHandle   hParent;
    NvHandle   hObject;
    NvHandle   hClientSrc;
    NvHandle   hObjectSrc;
    NvU32      flags;
    NvU32      status;
} NVOS55_PARAMETERS_v03_00;

typedef NVOS55_PARAMETERS_v03_00 NVOS55_PARAMETERS_v;


#endif

#ifdef SDK_DEBUG_PRINT_STRUCTURES
// These are printable definitions of above structures. These will be used for RPC logging in the vmioplugin.

#ifndef SKIP_PRINT_NVOS00_PARAMETERS_v03_00
static vmiopd_fdesc_t vmiopd_fdesc_t_NVOS00_PARAMETERS_v03_00[] = {
    {
        .vtype                = vtype_NvHandle,
        .offset               = NV_OFFSETOF(NVOS00_PARAMETERS_v03_00, hRoot),
        .name                 = "hRoot"
    },
    {
        .vtype                = vtype_NvHandle,
        .offset               = NV_OFFSETOF(NVOS00_PARAMETERS_v03_00, hObjectParent),
        .name                 = "hObjectParent"
    },
    {
        .vtype                = vtype_NvHandle,
        .offset               = NV_OFFSETOF(NVOS00_PARAMETERS_v03_00, hObjectOld),
        .name                 = "hObjectOld"
    },
    {
        .vtype                = vtype_NvV32,
        .offset               = NV_OFFSETOF(NVOS00_PARAMETERS_v03_00, status),
        .name                 = "status"
    },
    {
        .vtype        = vt_end
    }
};

static vmiopd_mdesc_t vmiopd_mdesc_t_NVOS00_PARAMETERS_v03_00 = {
    .name = "NVOS00_PARAMETERS",
    .header_length = NV_SIZEOF32(NVOS00_PARAMETERS_v03_00),
    .fdesc = vmiopd_fdesc_t_NVOS00_PARAMETERS_v03_00
};
#endif

#ifndef SKIP_PRINT_NVOS55_PARAMETERS_v03_00
static vmiopd_fdesc_t vmiopd_fdesc_t_NVOS55_PARAMETERS_v03_00[] = {
    {
        .vtype                = vtype_NvHandle,
        .offset               = NV_OFFSETOF(NVOS55_PARAMETERS_v03_00, hClient),
        .name                 = "hClient"
    },
    {
        .vtype                = vtype_NvHandle,
        .offset               = NV_OFFSETOF(NVOS55_PARAMETERS_v03_00, hParent),
        .name                 = "hParent"
    },
    {
        .vtype                = vtype_NvHandle,
        .offset               = NV_OFFSETOF(NVOS55_PARAMETERS_v03_00, hObject),
        .name                 = "hObject"
    },
    {
        .vtype                = vtype_NvHandle,
        .offset               = NV_OFFSETOF(NVOS55_PARAMETERS_v03_00, hClientSrc),
        .name                 = "hClientSrc"
    },
    {
        .vtype                = vtype_NvHandle,
        .offset               = NV_OFFSETOF(NVOS55_PARAMETERS_v03_00, hObjectSrc),
        .name                 = "hObjectSrc"
    },
    {
        .vtype                = vtype_NvU32,
        .offset               = NV_OFFSETOF(NVOS55_PARAMETERS_v03_00, flags),
        .name                 = "flags"
    },
    {
        .vtype                = vtype_NvU32,
        .offset               = NV_OFFSETOF(NVOS55_PARAMETERS_v03_00, status),
        .name                 = "status"
    },
    {
        .vtype        = vt_end
    }
};

static vmiopd_mdesc_t vmiopd_mdesc_t_NVOS55_PARAMETERS_v03_00 = {
    .name = "NVOS55_PARAMETERS",
    .header_length = NV_SIZEOF32(NVOS55_PARAMETERS_v03_00),
    .fdesc = vmiopd_fdesc_t_NVOS55_PARAMETERS_v03_00
};
#endif

#endif

#ifdef SDK_DEBUG_PRINT_FUNCTIONS
// These are definitions for versioned functions. These will be used for RPC logging in the vmioplugin.
#ifndef SKIP_PRINT_NVOS00_PARAMETERS_v03_00
vmiopd_mdesc_t *sdkdebugNvos00Parameters_v03_00(void)
{
    return &vmiopd_mdesc_t_NVOS00_PARAMETERS_v03_00;
}
#endif

#ifndef SKIP_PRINT_NVOS55_PARAMETERS_v03_00
vmiopd_mdesc_t *sdkdebugNvos55Parameters_v03_00(void)
{
    return &vmiopd_mdesc_t_NVOS55_PARAMETERS_v03_00;
}
#endif


#endif

#ifdef SDK_ENUM_LIST
// These are the list of custom data types (structs, unions). These  will be used for RPC logging in the vmioplugin.

#ifndef SKIP_PRINT_NVOS00_PARAMETERS_v03_00
PROCESS_STRUCTURE(NVOS00_PARAMETERS_v03_00, sdkdebugNvos00Parameters_v03_00)
#endif

#ifndef SKIP_PRINT_NVOS55_PARAMETERS_v03_00
PROCESS_STRUCTURE(NVOS55_PARAMETERS_v03_00, sdkdebugNvos55Parameters_v03_00)
#endif

#endif

#ifdef SDK_ARRAY_LENGTH_FUNCTIONS

#endif

